#!/bin/sh

ENVIRONMENT=$1

PINGDOM_IPS=$(curl -s https://my.pingdom.com/probes/ipv4 | tr -d ' ' | tr '\n' ',' | sed 's/,/\\,/g' | sed 's/\\,$//')
LAA_IP_RANGES=$(curl -s https://raw.githubusercontent.com/ministryofjustice/laa-ip-allowlist/main/cidrs.txt | tr -d ' ' | tr '\n' ',' | sed 's/,/\\,/g' | sed 's/\\,$//')
IP_ALLOWLIST="${PINGDOM_IPS}\,${LAA_IP_RANGES}"

deploy_branch() {
  RELEASE_NAME=$(echo $CIRCLE_BRANCH | tr '[:upper:]' '[:lower:]' | sed 's:^\w*\/::' | tr -s ' _/[]().' '-' | cut -c1-30 | sed 's/-$//')
  RELEASE_HOST="$RELEASE_NAME-laa-hmrc-interface-uat.cloud-platform.service.justice.gov.uk"
  BRANCH_NAME=$(echo $CIRCLE_BRANCH | tr -s ' _/[]().' '-')
  IDENTIFIER="$RELEASE_NAME-laa-hmrc-interface-service-api-laa-hmrc-interface-uat-green"
  if [[ $(echo $BRANCH_NAME | awk -F/ '{print NF-1}')  != '0' ]]
  then
    BRANCH_NAME="$(echo $BRANCH_NAME | awk -F/ '{print $1}')-$(echo $BRANCH_NAME | awk -F/ '{print $NF}')"
  fi

  echo "Deploying CIRCLE_SHA1: $CIRCLE_SHA1 under release name: '$RELEASE_NAME'..."

  helm upgrade $RELEASE_NAME ./deploy/helm/. \
                --install --wait \
                --namespace=${K8S_NAMESPACE} \
                --values ./deploy/helm/values-uat.yaml \
                --set deploy.host="$RELEASE_HOST" \
                --set image.repository="${ECR_REGISTRY}/${ECR_REPOSITORY}" \
                --set image.tag="$CIRCLE_SHA1" \
                --set ingress.hosts="{$RELEASE_HOST}" \
                --set ingress.annotations."external-dns\.alpha\.kubernetes\.io/set-identifier"="$IDENTIFIER" \
                --set database.name="$RELEASE_NAME" \
                --set sidekiq.queue_name="$BRANCH_NAME-" \
                --set-string ipAllowlist="$IP_ALLOWLIST"
}

deploy_main() {
  helm upgrade laa-hmrc-interface ./deploy/helm/. \
                --install --wait \
                --namespace=${K8S_NAMESPACE} \
                --values ./deploy/helm/values-"$ENVIRONMENT".yaml \
                --set image.repository="${ECR_REGISTRY}/${ECR_REPOSITORY}" \
                --set image.tag="${CIRCLE_SHA1}" \
                --set-string ipAllowlist="$IP_ALLOWLIST"
}


if [[ "$ENVIRONMENT" == "uat" ]]; then
  if deploy_branch; then
    echo "Deploy succeeded"
  else
    # If a previous `helm upgrade` was cancelled this could have got the release stuck in
    # a "pending-upgrade" state (c.f. https://stackoverflow.com/a/65135726). If so, this
    # can generally be fixed with a `helm rollback`, so we try that here.
    echo "Deploy failed. Attempting rollback"

    if helm rollback "$RELEASE_NAME"; then
      echo "Rollback succeeded. Retrying deploy"
      deploy_branch
    else
      echo "Rollback failed. Consider manually running 'helm delete $RELEASE_NAME'"
      exit 1
    fi
  fi
else
  deploy_main
fi
